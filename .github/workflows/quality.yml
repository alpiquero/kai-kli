
name: Quality

on:
  push:
    branches-ignore:
      - "v*"
    tags-ignore:
      - v*

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.15

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install golangci-lint
        run: curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.33.0

      - name: Install golint
        run: go get -u golang.org/x/lint/golint

      - name: Run golangci-lint
        run: $(go env GOPATH)/bin/golangci-lint run ./...  --timeout 5m

      - name: Run golint
        run: $(go env GOPATH)/bin/golint ./...
  
  tests:
    strategy:
      matrix:
        go-version: [ 1.15.x ]
        platform: [ macos-latest, ubuntu-latest, windows-latest ]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Test
        run: |
          go test -coverprofile="${{ matrix.platform }}_coverage.out" -covermode=atomic -coverpkg=./... ./...
          go tool cover -func="${{ matrix.platform }}_coverage.out"

      - name: Upload coverage report
        uses: actions/upload-artifact@v1
        with:
          name: ${{ matrix.platform }}_coverage
          path: ${{ matrix.platform }}_coverage.out

  coverage:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}

      - name: Checkout code
        uses: actions/checkout@v2
      - run: git fetch --prune --unshallow

      - name: Download coverage report
        uses: actions/download-artifact@v1
        with:
          name: ubuntu-latest_coverage

      - name: Analyze with SonarCloud
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
