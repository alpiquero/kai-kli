// Code generated by MockGen. DO NOT EDIT.
// Source: version.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	version "github.com/konstellation-io/kli/api/kre/version"
	reflect "reflect"
)

// MockVersionInterface is a mock of VersionInterface interface
type MockVersionInterface struct {
	ctrl     *gomock.Controller
	recorder *MockVersionInterfaceMockRecorder
}

// MockVersionInterfaceMockRecorder is the mock recorder for MockVersionInterface
type MockVersionInterfaceMockRecorder struct {
	mock *MockVersionInterface
}

// NewMockVersionInterface creates a new mock instance
func NewMockVersionInterface(ctrl *gomock.Controller) *MockVersionInterface {
	mock := &MockVersionInterface{ctrl: ctrl}
	mock.recorder = &MockVersionInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockVersionInterface) EXPECT() *MockVersionInterfaceMockRecorder {
	return m.recorder
}

// List mocks base method
func (m *MockVersionInterface) List(arg0 string) (version.List, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", arg0)
	ret0, _ := ret[0].(version.List)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List
func (mr *MockVersionInterfaceMockRecorder) List(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockVersionInterface)(nil).List), arg0)
}
