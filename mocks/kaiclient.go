// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	processregistry "github.com/konstellation-io/kli/api/processregistry"
)

// MockInterface is a mock of Interface interface.
type MockInterface struct {
	ctrl     *gomock.Controller
	recorder *MockInterfaceMockRecorder
}

// MockInterfaceMockRecorder is the mock recorder for MockInterface.
type MockInterfaceMockRecorder struct {
	mock *MockInterface
}

// NewMockInterface creates a new mock instance.
func NewMockInterface(ctrl *gomock.Controller) *MockInterface {
	mock := &MockInterface{ctrl: ctrl}
	mock.recorder = &MockInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInterface) EXPECT() *MockInterfaceMockRecorder {
	return m.recorder
}

// RegisteredProcess mocks base method.
func (m *MockInterface) RegisteredProcess() processregistry.RegisteredProcessInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RegisteredProcess")
	ret0, _ := ret[0].(processregistry.RegisteredProcessInterface)
	return ret0
}

// RegisteredProcess indicates an expected call of RegisteredProcess.
func (mr *MockInterfaceMockRecorder) RegisteredProcess() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RegisteredProcess", reflect.TypeOf((*MockInterface)(nil).RegisteredProcess))
}
